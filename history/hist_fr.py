from logger import *
import random
from datetime import datetime
from bot import *
import pytz
import requests
from telebot import types
import json


def send_historical_events_CHANNEL_FR_image(CHANNEL_FR):
    try:
        today = datetime.now(pytz.timezone('America/Sao_Paulo'))
        day = today.day
        month = today.month

        response = requests.get(
            f'https://fr.wikipedia.org/api/rest_v1/feed/onthisday/events/{month}/{day}'
        )
        events = response.json().get('events', [])
        events_with_photo = [
            event
            for event in events
            if event.get('pages') and event['pages'][0].get('thumbnail')
        ]

        if events:
            random_event = random.choice(events)
            event_text = random_event.get('text', '')
            event_year = random_event.get('year', '')

        if not events_with_photo:
            logger.info('N√£o h√° eventos com fotos para enviar hoje.')
            return

        random_event = random.choice(events_with_photo)
        caption = f'<b>üñº | Histoire illustr√©e </b>\n\nLe <b>{day} {get_month_name(month)} {event_year}</b>\n\n<code>{event_text}</code>\n\nüí¨ Saviez-vous? Suivez @histoire_france.'

        options = {'parse_mode': 'HTML'}

        photo_url = random_event['pages'][0]['thumbnail']['source']
        bot.send_photo(CHANNEL_FR, photo_url, caption=caption, **options)
        logger.success(
            f'Evento hist√≥rico em foto enviado com sucesso para o canal ID {CHANNEL_FR}.'
        )
    except Exception as e:
        logger.error(f'Falha ao enviar evento hist√≥rico: {e}')


def hist_CHANNEL_FR_imgs():
    try:
        send_historical_events_CHANNEL_FR_image(CHANNEL_FR)
        logger.success(f'Mensagem enviada o canal {CHANNEL_FR}')
    except Exception as e:
        logger.error('Erro ao enviar o trabalho imgs:', str(e))


def get_month_name(month):
    month_names = [
        'Janeiro',
        'Fevereiro',
        'Mar√ßo',
        'Abril',
        'Maio',
        'Junho',
        'Julho',
        'Agosto',
        'Setembro',
        'Outubro',
        'Novembro',
        'Dezembro',
    ]
    return month_names[month]


def get_deaths_of_the_day(CHANNEL_FR):
    try:
        today = datetime.now()
        day = today.day
        month = today.month

        response = requests.get(
            f'https://fr.wikipedia.org/api/rest_v1/feed/onthisday/deaths/{month}/{day}',
            headers={
                'accept': 'application/json; charset=utf-8; profile="https://www.mediawiki.org/wiki/Specs/onthisday/0.3.3"'
            },
        )

        if response.status_code == 200:
            data = response.json()
            deaths = data.get('deaths', [])

            if len(deaths) > 0:
                death_messages = []

                for index, death in enumerate(deaths[:5], start=1):
                    name = f"<b>{death.get('text', '')}</b>"
                    info = death.get('pages', [{}])[0].get(
                        'extract', 'Informa√ß√µes n√£o dispon√≠veis.'
                    )
                    date = death.get('year', 'Data desconhecida.')

                    death_message = f'<i>{index}.</i> <b>Nome:</b> {name}\n<b>Informa√ß√µes:</b> {info}\n<b>Data da morte:</b> {date}'
                    death_messages.append(death_message)

                message = f'<b>‚ö∞Ô∏è | D√©c√®s ce jour-l√† : {day} de {get_month_name(month)}</b>\n\n'
                message += '\n\n'.join(death_messages)
                message += '\n\nüí¨ Le saviez-vous ? Suivez @histoire_france.'

                bot.send_message(CHANNEL_FR, message)
            else:

                logger.info(
                    'N√£o h√° informa√ß√µes sobre mortos para o dia atual.'
                )

        else:

            logger.warning('Erro ao obter informa√ß√µes:', response.status_code)

    except Exception as e:
        logger.error('Erro ao enviar mortos para os canal:', str(e))


def hist_CHANNEL_FR_death():
    try:
        get_deaths_of_the_day(CHANNEL_FR)
        logger.success(f'Mortos enviada o canal {CHANNEL_FR}')
    except Exception as e:
        logger.info('Erro ao enviar o trabalho mortes:', str(e))


def get_births_of_the_day(CHANNEL_FR):
    try:
        today = datetime.now(pytz.timezone('America/Sao_Paulo'))
        day = today.day
        month = today.month

        response = requests.get(
            f'https://fr.wikipedia.org/api/rest_v1/feed/onthisday/births/{month}/{day}',
            headers={
                'accept': 'application/json; charset=utf-8; profile="https://www.mediawiki.org/wiki/Specs/onthisday/0.3.3"'
            },
        )

        if response.status_code == 200:
            data = response.json()
            births = data.get('births', [])

            if len(births) > 0:
                birth_messages = []

                for index, birth in enumerate(births[:5], start=1):
                    name = f"<b>{birth.get('text', '')}</b>"
                    info = birth.get('pages', [{}])[0].get(
                        'extract', 'Informa√ß√µes n√£o dispon√≠veis.'
                    )
                    date = birth.get('year', 'Data desconhecida.')

                    birth_message = f'<i>{index}.</i> <b>Nome:</b> {name}\n<b>Informa√ß√µes:</b> {info}\n<b>Data de nascimento:</b> {date}'
                    birth_messages.append(birth_message)

                message = f'<b>üéÇ | Naissances ce jour-l√† : {day} de {get_month_name(month)}</b>\n\n'
                message += '\n\n'.join(birth_messages)
                message += '\n\nüí¨ Le saviez-vous ? Suivez @histoire_france.'

                bot.send_message(CHANNEL_FR, message)
            else:

                logger.info('N√£o h√° informa√ß√µes sobre nascidos hoje.')

        else:

            logger.warning('Erro ao obter informa√ß√µes:', response.status_code)

    except Exception as e:
        logger.error('Erro ao obter informa√ß√µes:', str(e))


def hist_CHANNEL_FR_birth():
    try:
        get_births_of_the_day(CHANNEL_FR)
        logger.success(f'Nascidos enviada o canal {CHANNEL_FR}')
    except Exception as e:
        logger.error('Erro ao enviar o trabalho nascido:', str(e))


def get_historical_events():
    today = datetime.now()
    day = today.day
    month = today.month
    try:
        with open(
            '../data/events-fr.json', 'r', encoding='utf-8'
        ) as file:

            json_events = json.load(file)
            events = json_events[f'{month}-{day}']
            if events:
                return '\n\n'.join(events)
            else:
                return None
    except Exception as e:
        logger.info('-' * 50)
        logger.error('Error reading events from JSON:', str(e))
        logger.info('-' * 50)
        return None


def send_historical_events_channel(CHANNEL_FR):
    try:
        today = datetime.now()
        day = today.day
        month = today.month
        events = get_historical_events()

        if events:
            message = f'<b>AUJOURD\'HUI DANS L\'HISTOIRE</b>\n\nüìÖ | √âv√©nement le <b>{day}/{month}</b>\n\n{events}\n\nüí¨ Le saviez-vous ? Suivez @histoire_france.'

            bot.send_message(CHANNEL_FR, message)
        else:
            bot.send_message(
                CHANNEL_FR,
                '<b>Il n‚Äôy a aucune information sur les d√©c√®s pour la journ√©e en cours.</b>',
                parse_mode='HTML',
            )

            logger.info(
                f'Nenhum evento hist√≥rico para hoje no grupo {CHANNEL_FR}'
            )

    except Exception as e:
        logger.error('Erro ao enviar fatos hist√≥ricos para o canal:', str(e))


def hist_CHANNEL_FR_events():
    try:
        send_historical_events_channel(CHANNEL_FR)
        logger.success(f'Eventos hist√≥ricos enviada o canal {CHANNEL_FR}')
    except Exception as e:
        logger.error('Erro no trabalho de enviar fatos hist no canal:', str(e))


def message_CHANNEL_FR_alert():
    try:
        message = "üåü üì∫ **Rejoignez notre incroyable cha√Æne d'Histoire !** üì∫ üåü\n\n"\
            "Amis, d√©couvrez la magie de l'histoire √† travers nos cha√Ænes divertissantes et passionnantes ! "\
            "Rejoignez-nous d√®s maintenant pour profiter d'une large gamme de programmes et de documentaires "\
            "qui vous emm√®neront dans un voyage passionnant dans les profondeurs de l'histoire.\n\n"\
            "Vivez des aventures anciennes, des faits intrigants et des √©v√©nements d√©cisifs qui ont fa√ßonn√© notre monde. "\
            "Rejoignez-nous d√®s aujourd'hui pour une exp√©rience √©ducative agr√©able et enrichissante !\n\n"\
            "üåç Cliquez sur le lien pour rejoindre la liste des cha√Ænes d'histoire : [@history_channels]"\

        bot.send_message(
            CHANNEL_FR,
            message,
            parse_mode='HTML',
        )
    except Exception as e:
        logger.error(
            'Erreur lors de l\'envoi de faits historiques dans le canal :', str(e))

