from logger import *
import random
from datetime import datetime
from bot import *
import pytz
import requests
from telebot import types
import json
from db import db, add_presidents_hi_db


def get_month_name(month):
    month_names = [
        '‡§ú‡§®‡§µ‡§∞‡•Ä',
        '‡§´‡§º‡§∞‡§µ‡§∞‡•Ä',
        '‡§Æ‡§æ‡§∞‡•ç‡§ö',
        '‡§Ö‡§™‡•ç‡§∞‡•à‡§≤',
        '‡§Æ‡§à',
        '‡§ú‡•Ç‡§®',
        '‡§ú‡•Å‡§≤‡§æ‡§à',
        '‡§Ö‡§ó‡§∏‡•ç‡§§',
        '‡§∏‡§ø‡§§‡§Ç‡§¨‡§∞',
        '‡§Ö‡§ï‡•ç‡§ü‡•Ç‡§¨‡§∞',
        '‡§®‡§µ‡§Ç‡§¨‡§∞',
        '‡§¶‡§ø‡§∏‡§Ç‡§¨‡§∞',
    ]
    return month_names[month]


def get_historical_events():
    today = datetime.now()
    day = today.day
    month = today.month
    try:
        with open(
            'data/events-hi.json', 'r', encoding='utf-8'
        ) as file:

            json_events = json.load(file)
            events = json_events[f'{month}-{day}']
            if events:
                return '\n\n'.join(events)
            else:
                return None
    except Exception as e:
        logger.info('-' * 50)
        logger.error('Error reading events from JSON:', str(e))
        logger.info('-' * 50)
        return None


def send_historical_events_channel(CHANNEL_HI):
    try:
        today = datetime.now()
        day = today.day
        month = today.month
        events = get_historical_events()

        if events:
            message = f'<b>‡§Ü‡§ú ‡§á‡§§‡§ø‡§π‡§æ‡§∏ ‡§Æ‡•á‡§Ç</b>\n\nüìÖ | <b>{day}/{month}</b> ‡§ï‡•ã ‡§ò‡§ü‡§®‡§æ\n\n{events}\n\n<blockquote>üí¨ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ú‡§æ‡§®‡§§‡•á ‡§π‡•à‡§Ç? @itihaas_hi ‡§ï‡•ã ‡§´‡•â‡§≤‡•ã ‡§ï‡§∞‡•á‡§Ç‡•§</blockquote>'

            bot.send_message(CHANNEL_HI, message)
        else:
            bot.send_message(
                CHANNEL_HI,
                '<b>‡§Ü‡§ú ‡§§‡§ï ‡§Æ‡•å‡§§‡•ã‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§à ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§</b>',
                parse_mode='HTML',
            )

            logger.info(
                f'Nenhum evento hist√≥rico para hoje no grupo {CHANNEL_HI}'
            )

    except Exception as e:
        logger.error('Erro ao enviar fatos hist√≥ricos para o canal:', str(e))


def hist_CHANNEL_HI_events():
    try:
        send_historical_events_channel(CHANNEL_HI)
        logger.success(f'Eventos hist√≥ricos enviada o canal {CHANNEL_HI}')
    except Exception as e:
        logger.error('Erro no trabalho de enviar fatos hist no canal:', str(e))


def message_CHANNEL_HI_alert():
    try:
        message = "üåü üì∫ <b>‡§π‡§Æ‡§æ‡§∞‡•á ‡§∂‡§æ‡§®‡§¶‡§æ‡§∞ ‡§á‡§§‡§ø‡§π‡§æ‡§∏ ‡§ö‡•à‡§®‡§≤ ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•ã‡§Ç!</b> üì∫ üåü\n\n"\
            "‡§¶‡•ã‡§∏‡•ç‡§§‡•ã‡§Ç, ‡§π‡§Æ‡§æ‡§∞‡•á ‡§Æ‡§®‡•ã‡§∞‡§Ç‡§ú‡§ï ‡§î‡§∞ ‡§∞‡•ã‡§Æ‡§æ‡§Ç‡§ö‡§ï ‡§ö‡•à‡§®‡§≤‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§á‡§§‡§ø‡§π‡§æ‡§∏ ‡§ï‡§æ ‡§ú‡§æ‡§¶‡•Ç ‡§ñ‡•ã‡§ú‡•á‡§Ç! "\
            "‡§Ö‡§≠‡•Ä ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•Å‡§°‡§º‡•á‡§Ç ‡§î‡§∞ ‡§è‡§ï ‡§µ‡•ç‡§Ø‡§æ‡§™‡§ï ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§î‡§∞ ‡§°‡•â‡§ï‡•ç‡§Ø‡•Ç‡§Æ‡•á‡§Ç‡§ü‡•ç‡§∞‡•Ä ‡§ï‡§æ ‡§Ü‡§®‡§Ç‡§¶ ‡§≤‡•á‡§Ç ‡§ú‡•ã ‡§Ü‡§™‡§ï‡•ã ‡§è‡§ï ‡§∞‡•ã‡§Æ‡§æ‡§Ç‡§ö‡§ï ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§™‡§∞ ‡§≤‡•á‡§ï‡§∞ ‡§ú‡§æ‡§è‡§ó‡§æ "\
            "‡§á‡§§‡§ø‡§π‡§æ‡§∏ ‡§ï‡•á ‡§ó‡§π‡§∞‡§æ‡§à‡§Ø‡•ã‡§Ç ‡§Æ‡•á‡§Ç‡•§\n\n"\
            "‡§™‡•ç‡§∞‡§æ‡§ö‡•Ä‡§® ‡§∏‡§æ‡§π‡§∏‡§ø‡§ï ‡§ï‡§ø‡§∏‡•ç‡§∏‡•á, ‡§∞‡•ã‡§ö‡§ï ‡§§‡§•‡•ç‡§Ø ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•ã ‡§Ü‡§ï‡§æ‡§∞ ‡§¶‡•á‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ò‡§ü‡§®‡§æ‡§ì‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§ï‡§∞‡•á‡§Ç‡•§ "\
            "‡§è‡§ï ‡§Æ‡§®‡•ã‡§∞‡§Ç‡§ú‡§® ‡§∏‡•á ‡§≠‡§∞‡§™‡•Ç‡§∞ ‡§î‡§∞ ‡§ú‡•ç‡§û‡§æ‡§®‡§µ‡§∞‡•ç‡§ß‡§ï ‡§∂‡•à‡§ï‡•ç‡§∑‡§ø‡§ï ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§ú ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•Å‡§°‡§º‡•á‡§Ç!\n\n"\
            "üåç ‡§á‡§§‡§ø‡§π‡§æ‡§∏ ‡§ö‡•à‡§®‡§≤ ‡§ï‡•Ä ‡§∏‡•Ç‡§ö‡•Ä ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•ã‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≤‡§ø‡§Ç‡§ï ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç: [@history_channels]"\

        bot.send_message(
            CHANNEL_HI,
            message,
            parse_mode='HTML',
        )
    except Exception as e:
        logger.error('‡§ö‡•à‡§®‡§≤ ‡§Æ‡•á‡§Ç ‡§ê‡§§‡§ø‡§π‡§æ‡§∏‡§ø‡§ï ‡§§‡§•‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§≠‡•á‡§ú‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø:', str(e))


def get_curiosity_HI(CHANNEL_HI):
    try:
        today = datetime.now()
        day = today.day
        month = today.month
        with open(
            './channel-historys/data/curiosity/curiosity-hi.json', 'r', encoding='utf-8'
        ) as file:
            json_events = json.load(file)
            curiosity = json_events.get(f'{month}-{day}', {}).get(
                'curiosity', []
            )
            if curiosity:
                info = curiosity[0].get('text', '')

                # For 2025 (uncomment this line and comment the line above)
                # info = curiosidade[1].get("texto1", "")

                message = f'<b>‡§ê‡§§‡§ø‡§π‡§æ‡§∏‡§ø‡§ï ‡§ú‡§ø‡§ú‡•ç‡§û‡§æ‡§∏‡§æ‡§è‡§Å üìú</b>\n\n{info}\n\n<blockquote>üí¨ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ú‡§æ‡§®‡§§‡•á ‡§π‡•à‡§Ç? ‡§Ö‡§®‡•Å‡§∏‡§∞‡§£ ‡§ï‡§∞‡§®‡§æ @itihaas_hi.</blockquote>'
                bot.send_message(CHANNEL_HI, message)
            else:

                logger.info('‡§Ü‡§ú ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•ã‡§à ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§')

    except Exception as e:

        logger.error('‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø:', str(e))


def hist_channel_curiosity_HI():
    try:
        get_curiosity_HI(CHANNEL_HI)

        logger.success(f'‡§ï‡§∞‡§ø‡§Ø‡•ã‡§∏‡§ø‡§ü‡•Ä {CHANNEL_HI} ‡§ö‡•à‡§®‡§≤ ‡§™‡§∞ ‡§≠‡•á‡§ú‡•Ä ‡§ó‡§à‡•§')

    except Exception as e:

        logger.error('‡§ï‡§∞‡§ø‡§Ø‡•ã‡§∏‡§ø‡§ü‡•Ä ‡§ï‡•ã ‡§ö‡•à‡§®‡§≤ ‡§™‡§∞ ‡§≠‡•á‡§ú‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø:', str(e))

with open(
    './data/presidents/presidents-hi.json', 'r', encoding='utf-8'
) as file:
    presidents = json.load(file)


def send_president_photo_HI():
    try:
        if db.presidents_hi.count_documents({}) == 0:
            president = presidents.get('1')
            new_id = 1
            new_date = datetime.now(
                pytz.timezone('America/Sao_Paulo')
            ).strftime('%Y-%m-%d')
            add_presidents_hi_db(new_id, new_date)
            send_info_through_channel_HI(president)
        else:
            last_president = (
                db.presidents_hi.find().sort([('_id', -1)]).limit(1)[0]
            )
            last_id = last_president['id']
            sending_date = datetime.strptime(
                last_president['date'], '%Y-%m-%d'
            )

            today = datetime.now(pytz.timezone('America/Sao_Paulo'))
            today_str = today.strftime('%Y-%m-%d')

            if last_president['date'] != today_str:

                logger.info(
                    '‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•ã ‡§Ü‡§ú ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à‡•§'
                )

                next_id = last_id + 1
                next_president = presidents.get(str(next_id))
                if next_president:
                    db.presidents_hi.update_one(
                        {'date': last_president['date']},
                        {'$set': {'date': today_str}, '$inc': {'id': 1}},
                    )

                    send_info_through_channel_HI(next_president)
                else:

                    logger.error('‡§î‡§∞ ‡§ï‡•ã‡§à ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§≠‡•á‡§ú‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§')

            else:

                logger.info(
                    "‡§Ö‡§ó‡§≤‡•á ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§≠‡•á‡§ú‡§®‡•á ‡§ï‡§æ ‡§∏‡§Æ‡§Ø ‡§Ö‡§≠‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§Ü‡§Ø‡§æ ‡§π‡•à‡•§"
                )

    except Exception as e:

        logger.error(
            f'‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§≠‡•á‡§ú‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§π‡•Å‡§à: {str(e)}'
        )


def send_info_through_channel_HI(president_info):
    try:
        title = president_info.get('title', '')
        name = president_info.get('name', '')
        position = president_info.get('position', '')
        party = president_info.get('broken', '')
        term_year = president_info.get('year_of_office', '')
        vice_president = president_info.get('vice_president', '')
        photo = president_info.get('photo', '')
        where = president_info.get('local', '')

        caption = (
            f'<b>{title}</b>\n\n'
            f'<b>‡§®‡§æ‡§Æ:</b> {name}\n'
            f'<b>‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä:</b> {position}¬∞ {title}\n'
            f'<b>‡§™‡§æ‡§∞‡•ç‡§ü‡•Ä:</b> {party}\n'
            f'<b>‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡§æ‡§≤ ‡§µ‡§∞‡•ç‡§∑:</b> {term_year}\n'
            f'<b>‡§â‡§™-‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø:</b> {vice_president}\n'
            f'<b>‡§∏‡•ç‡§•‡§æ‡§®:</b> {where}\n\n'
            f'<blockquote>üí¨ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ú‡§æ‡§®‡§§‡•áv ‡§π‡•à‡§Ç? @itihaas_hi ‡§ï‡•ã ‡§´‡•â‡§≤‡•ã ‡§ï‡§∞‡•á‡§Ç‡•§</blockquote>'
        )

        logger.success('‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§ï‡•Ä ‡§§‡§∏‡•ç‡§µ‡•Ä‡§∞ ‡§≠‡•á‡§ú‡§®‡§æ ‡§∏‡§´‡§≤ ‡§∞‡§π‡§æ!')

        bot.send_photo(
            CHANNEL_HI, photo=photo, caption=caption, parse_mode='HTML'
        )
    except Exception as e:

        logger.error(f'‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§ï‡•Ä ‡§´‡•ã‡§ü‡•ã ‡§≠‡•á‡§ú‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø: {str(e)}')
