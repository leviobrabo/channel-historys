from logger import *
import random
from datetime import datetime
from bot import *
import pytz
import requests
from telebot import types
import json
from db import db, add_presidents_ru_db


def send_historical_events_CHANNEL_RU_image(CHANNEL_RU):
    try:
        today = datetime.now(pytz.timezone('America/Sao_Paulo'))
        day = today.day
        month = today.month

        response = requests.get(
            f'https://ru.wikipedia.org/api/rest_v1/feed/onthisday/events/{month}/{day}'
        )
        events = response.json().get('events', [])
        events_with_photo = [
            event
            for event in events
            if event.get('pages') and event['pages'][0].get('thumbnail')
        ]

        random_event = random.choice(events_with_photo)
        event_text = random_event.get('text', '')
        event_year = random_event.get('year', '')

        if not events_with_photo:
            logger.info('N√£o h√° eventos com fotos para enviar hoje.')
            return

        random_event = random.choice(events_with_photo)
        caption = f'<b>üñº | Ilustrowana historia </b>\n\n<b>{day} {get_month_name(month)} {event_year}</b>\n\n<code>{event_text}</code>\n\n<blockquote>üí¨ Czy wiedzia≈Çe≈õ? ≈öled≈∫ @segodnya_v_Istoriis.</blockquote>'

        options = {'parse_mode': 'HTML'}

        photo_url = random_event['pages'][0]['thumbnail']['source']
        bot.send_photo(CHANNEL_RU, photo_url, caption=caption, **options)
        logger.success(
            f'Evento hist√≥rico em foto enviado com sucesso para o canal ID {CHANNEL_RU}.'
        )
    except Exception as e:
        logger.error(f'Falha ao enviar evento hist√≥rico: {e}')


def hist_CHANNEL_RU_imgs():
    try:
        send_historical_events_CHANNEL_RU_image(CHANNEL_RU)
        logger.success(f'Mensagem enviada o canal {CHANNEL_RU}')
    except Exception as e:
        logger.error('Erro ao enviar o trabalho imgs:', str(e))


def get_month_name(month):
    month_names = [
        'Stycze≈Ñ',
        'Luty',
        'Marzec',
        'Kwiecie≈Ñ',
        'Maj',
        'Czerwiec',
        'Lipiec',
        'Sierpie≈Ñ',
        'Wrzesie≈Ñ',
        'Pa≈∫dziernik',
        'Listopad',
        'Grudzie≈Ñ',
    ]
    return month_names[month]


def get_deaths_of_the_day(CHANNEL_RU):
    try:
        today = datetime.now()
        day = today.day
        month = today.month

        response = requests.get(
            f'https://ru.wikipedia.org/api/rest_v1/feed/onthisday/deaths/{month}/{day}',
            headers={
                'accept': 'application/json; charset=utf-8; profile="https://www.mediawiki.org/wiki/Specs/onthisday/0.3.3"'
            },
        )

        if response.status_code == 200:
            data = response.json()
            deaths = data.get('deaths', [])

            if len(deaths) > 0:
                death_messages = []

                for index, death in enumerate(deaths[:5], start=1):
                    name = f"<b>{death.get('text', '')}</b>"
                    info = death.get('pages', [{}])[0].get(
                        'extract', 'Informa√ß√µes n√£o dispon√≠veis.'
                    )
                    date = death.get('year', 'Data desconhecida.')

                    death_message = f'<i>{index}.</i> <b>–ò–º—è:</b> {name}\n<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b> {info}\n<b>–î–∞—Ç–∞ —Å–º–µ—Ä—Ç–∏:</b> {date}'

                    death_messages.append(death_message)

                    message = f'<b>‚ö∞Ô∏è | Zgony tego dnia: {day} {get_month_name(month)}</b>\n\n'
                    message += '\n\n'.join(death_messages)
                    message += '\n\n<blockquote>üí¨ Czy wiedzia≈Çe≈õ? ≈öled≈∫ @segodnya_v_Istoriis.</blockquote>'

                bot.send_message(CHANNEL_RU, message)
            else:

                logger.info(
                    'N√£o h√° informa√ß√µes sobre mortos para o dia atual.'
                )

        else:

            logger.warning('Erro ao obter informa√ß√µes:', response.status_code)

    except Exception as e:
        logger.error('Erro ao enviar mortos para os canal:', str(e))


def hist_CHANNEL_RU_death():
    try:
        get_deaths_of_the_day(CHANNEL_RU)
        logger.success(f'Mortos enviada o canal {CHANNEL_RU}')
    except Exception as e:
        logger.info('Erro ao enviar o trabalho mortes:', str(e))


def get_births_of_the_day(CHANNEL_RU):
    try:
        today = datetime.now(pytz.timezone('America/Sao_Paulo'))
        day = today.day
        month = today.month

        response = requests.get(
            f'https://ru.wikipedia.org/api/rest_v1/feed/onthisday/births/{month}/{day}',
            headers={
                'accept': 'application/json; charset=utf-8; profile="https://www.mediawiki.org/wiki/Specs/onthisday/0.3.3"'
            },
        )

        if response.status_code == 200:
            data = response.json()
            births = data.get('births', [])

            if len(births) > 0:
                birth_messages = []

                for index, birth in enumerate(births[:5], start=1):
                    name = f"<b>{birth.get('text', '')}</b>"
                    info = birth.get('pages', [{}])[0].get(
                        'extract', 'Informa√ß√µes n√£o dispon√≠veis.'
                    )
                    date = birth.get('year', 'Data desconhecida.')

                    birth_message = f'<i>{index}.</i> <b>–ò–º—è:</b> {name}\n<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b> {info}\n<b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> {date}'
                    birth_messages.append(birth_message)

                message = f'<b>üéÇ | Narodziny tego dnia: {day} {get_month_name(month)}</b>\n\n'
                message += '\n\n'.join(birth_messages)
                message += '\n\n<blockquote>üí¨ Czy wiedzia≈Çe≈õ? ≈öled≈∫ @segodnya_v_Istoriis.</blockquote>'
                bot.send_message(CHANNEL_RU, message)
            else:

                logger.info('N√£o h√° informa√ß√µes sobre nascidos hoje.')

        else:

            logger.warning('Erro ao obter informa√ß√µes:', response.status_code)

    except Exception as e:
        logger.error('Erro ao obter informa√ß√µes:', str(e))


def hist_CHANNEL_RU_birth():
    try:
        get_births_of_the_day(CHANNEL_RU)
        logger.success(f'Nascidos enviada o canal {CHANNEL_RU}')
    except Exception as e:
        logger.error('Erro ao enviar o trabalho nascido:', str(e))


def get_historical_events():
    today = datetime.now()
    day = today.day
    month = today.month
    try:
        with open(
            'data/events-ru.json', 'r', encoding='utf-8'
        ) as file:

            json_events = json.load(file)
            events = json_events[f'{month}-{day}']
            if events:
                return '\n\n'.join(events)
            else:
                return None
    except Exception as e:
        logger.info('-' * 50)
        logger.error('Error reading events from JSON:', str(e))
        logger.info('-' * 50)
        return None


def send_historical_events_channel(CHANNEL_RU):
    try:
        today = datetime.now()
        day = today.day
        month = today.month
        events = get_historical_events()

        if events:
            message = f'<b>DZI≈ö W HISTORII</b>\n\nüìÖ | Wydarzenia w dniu <b>{day}/{month}</b>\n\n{events}\n\n<blockquote>üí¨ Czy wiedzia≈Çe≈õ? ≈öled≈∫ @segodnya_v_Istoriis.</blockquote>'

            bot.send_message(CHANNEL_RU, message)
        else:
            bot.send_message(
                CHANNEL_RU,
                '<b>–ù–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</b>',
                parse_mode='HTML',
            )

            logger.info(
                f'Nenhum evento hist√≥rico para hoje no grupo {CHANNEL_RU}'
            )

    except Exception as e:
        logger.error('Erro ao enviar fatos hist√≥ricos para o canal:', str(e))


def hist_CHANNEL_RU_events():
    try:
        send_historical_events_channel(CHANNEL_RU)
        logger.success(f'Eventos hist√≥ricos enviada o canal {CHANNEL_RU}')
    except Exception as e:
        logger.error('Erro no trabalho de enviar fatos hist no canal:', str(e))


def message_CHANNEL_RU_alert():
    try:
        —Å–æ–æ–±—â–µ–Ω–∏–µ = "üåü üì∫ <b>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–º—É –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º—É –∫–∞–Ω–∞–ª—É!</b> üì∫ üåü\n\n"\
            "–î—Ä—É–∑—å—è, –æ—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –≤–æ–ª—à–µ–±—Å—Ç–≤–æ –∏—Å—Ç–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ –Ω–∞—à–∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∏ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –∫–∞–Ω–∞–ª—ã! "\
            "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, —á—Ç–æ–±—ã –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ–º –ø—Ä–æ–≥—Ä–∞–º–º –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤, "\
            "–ø–æ–≥—Ä—É–∂–∞—é—â–∏—Ö –≤–∞—Å –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –≥–ª—É–±–∏–Ω—É –∏—Å—Ç–æ—Ä–∏–∏.\n\n"\
            "–ü–æ—á—É–≤—Å—Ç–≤—É–π—Ç–µ –¥—Ä–µ–≤–Ω–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è, —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏ –∫–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–∏ –Ω–∞—à –º–∏—Ä. "\
            "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º —Å–µ–≥–æ–¥–Ω—è –¥–ª—è –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –∏ –ø—Ä–æ—Å–≤–µ—Ç–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –æ–ø—ã—Ç–∞!\n\n"\
            "üåç –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –∫–∞–Ω–∞–ª–æ–≤: [@history_channels]"\

        bot.send_message(
            CHANNEL_RU,
            —Å–æ–æ–±—â–µ–Ω–∏–µ,
            parse_mode='HTML',
        )
    except Exception as e:
        logger.error(
            '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–∫—Ç–æ–≤ –≤ –∫–∞–Ω–∞–ª:', str(e))



def get_curiosity_RU(CHANNEL_RU):
    try:
        today = datetime.now()
        day = today.day
        month = today.month
        with open(
            './channel-historys/data/curiosity/curiosity-ru.json', 'r', encoding='utf-8'
        ) as file:
            json_events = json.load(file)
            curiosity = json_events.get(f'{month}-{day}', {}).get(
                'curiosity', []
            )
            if curiosity:
                info = curiosity[0].get('text', '')

                # For 2025 (uncomment this line and comment the line above)
                # info = curiosidade[1].get("texto1", "")
                message = f'<b>–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–∞ üìú</b>\n\n{info}\n\n<blockquote>üí¨ –ó–Ω–∞–ª–∏ –ª–∏ –≤—ã? –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ @segodnya_v_Istoriis.</blockquote>'
                bot.send_message(CHANNEL_RU, message)
            else:

                logger.info('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç.')

    except Exception as e:

        logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', str(e))


def hist_channel_curiosity_RU():
    try:
        get_curiosity_RU(CHANNEL_RU)

        logger.success(f'–õ—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –∫–∞–Ω–∞–ª {CHANNEL_RU}')

    except Exception as e:

        logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–∞ –Ω–∞ –∫–∞–Ω–∞–ª:', str(e))

with open(
    './data/presidents/presidents-ru.json', 'r', encoding='utf-8'
) as file:
    presidents = json.load(file)


def send_president_photo_RU():
    try:
        if db.presidents_ru.count_documents({}) == 0:
            president = presidents.get('1')
            new_id = 1
            new_date = datetime.now(
                pytz.timezone('America/Sao_Paulo')
            ).strftime('%Y-%m-%d')
            add_presidents_ru_db(new_id, new_date)
            send_info_through_channel_RU(president)
        else:
            last_president = (
                db.presidents_ru.find().sort([('_id', -1)]).limit(1)[0]
            )
            last_id = last_president['id']
            sending_date = datetime.strptime(
                last_president['date'], '%Y-%m-%d'
            )

            today = datetime.now(pytz.timezone('America/Sao_Paulo'))
            today_str = today.strftime('%Y-%m-%d')

            if last_president['date'] != today_str:

                logger.info(
                    '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É.'
                )

                next_id = last_id + 1
                next_president = presidents.get(str(next_id))
                if next_president:
                    db.presidents_ru.update_one(
                        {'date': last_president['date']},
                        {'$set': {'date': today_str}, '$inc': {'id': 1}},
                    )

                    send_info_through_channel_RU(next_president)
                else:

                    logger.error('–ë–æ–ª—å—à–µ –Ω–µ—Ç –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.')

            else:

                logger.info(
                    "–ï—â–µ –Ω–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–µ."
                )

    except Exception as e:

        logger.error(
            f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–µ: {str(e)}'
        )


def send_info_through_channel_RU(president_info):
    try:
        title = president_info.get('title', '')
        name = president_info.get('name', '')
        position = president_info.get('position', '')
        party = president_info.get('broken', '')
        term_year = president_info.get('year_of_office', '')
        vice_president = president_info.get('vice_president', '')
        photo = president_info.get('photo', '')
        where = president_info.get('local', '')

        caption = (
            f'<b>{title}</b>\n\n'
            f'<b>–ò–º—è:</b> {name}\n'
            f'<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b> {position}¬∞ {title}\n'
            f'<b>–ü–∞—Ä—Ç–∏—è:</b> {party}\n'
            f'<b>–ì–æ–¥ –≤ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏:</b> {term_year}\n'
            f'<b>–í–∏—Ü–µ-–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç:</b> {vice_president}\n'
            f'<b>–ú–µ—Å—Ç–æ:</b> {where}\n\n'
            f'<blockquote>üí¨ –ó–Ω–∞–ª–∏ –ª–∏ –≤—ã? –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ @segodnya_v_Istoriis.</blockquote>'
        )

        logger.success('–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!')

        bot.send_photo(
            CHANNEL_RU, photo=photo, caption=caption, parse_mode='HTML'
        )
    except Exception as e:

        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞: {str(e)}')

