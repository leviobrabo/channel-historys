from logger import *
import random
from datetime import datetime
from bot import *
import pytz
import requests
from telebot import types
import json
from db import db, add_presidents_vi_db


def get_historical_events():
    today = datetime.now()
    day = today.day
    month = today.month
    try:
        with open(
            'data/events-vi.json', 'r', encoding='utf-8'
        ) as file:

            json_events = json.load(file)
            events = json_events[f'{month}-{day}']
            if events:
                return '\n\n'.join(events)
            else:
                return None
    except Exception as e:
        logger.error('Error reading events from JSON:', str(e))
        return None


def send_historical_events_channel(CHANNEL_VI):
    try:
        today = datetime.now()
        day = today.day
        month = today.month
        events = get_historical_events()

        if events:
            message = f'<b>H√îM NAY TRONG L·ªäCH S·ª¨</b>\n\nüìÖ | S·ª± ki·ªán v√†o ng√†y <b>{day}/{month}</b>\n\n{events}\n\n<blockquote>üí¨ B·∫°n c√≥ bi·∫øt kh√¥ng? Theo d√µi @hist_vi.</blockquote>'

            bot.send_message(CHANNEL_VI, message)
        else:
            bot.send_message(
                CHANNEL_VI,
                '<b>Kh√¥ng t√¨m th·∫•y g√¨ cho ng√†y h√¥m nay</b>',
                parse_mode='HTML',
            )

            logger.info(
                f'Nenhum evento hist√≥rico para hoje no grupo {CHANNEL_VI}'
            )

    except Exception as e:
        logger.error('Erro ao enviar fatos hist√≥ricos para o canal:', str(e))


def hist_CHANNEL_VI_events():
    try:
        send_historical_events_channel(CHANNEL_VI)
        logger.success(f'Eventos hist√≥ricos enviada o canal {CHANNEL_VI}')
    except Exception as e:
        logger.error('Erro no trabalho de enviar fatos hist no canal:', str(e))


def message_CHANNEL_VI_alert():
    try:
        tin_nhan = "üåü üì∫ <b>Tham gia k√™nh L·ªãch s·ª≠ tuy·ªát v·ªùi c·ªßa ch√∫ng t√¥i!</b> üì∫ üåü\n\n"\
            "B·∫°n b√®, kh√°m ph√° ph√©p m√†u c·ªßa l·ªãch s·ª≠ qua nh·ªØng k√™nh th√∫ v·ªã v√† h·∫•p d·∫´n c·ªßa ch√∫ng t√¥i! "\
            "Tham gia ngay ƒë·ªÉ t·∫≠n h∆∞·ªüng m·ªôt lo·∫°t c√°c ch∆∞∆°ng tr√¨nh v√† t√†i li·ªáu mang b·∫°n v√†o m·ªôt chuy·∫øn "\
            "phi√™u l∆∞u h·∫•p d·∫´n v√†o ƒë√°y c·ªßa l·ªãch s·ª≠.\n\n"\
            "Tr·∫£i nghi·ªám nh·ªØng cu·ªôc phi√™u l∆∞u c·ªï x∆∞a, nh·ªØng s·ª± th·∫≠t h·∫•p d·∫´n v√† nh·ªØng s·ª± ki·ªán quan tr·ªçng "\
            "ƒë√£ ƒë·ªãnh h√¨nh th·∫ø gi·ªõi c·ªßa ch√∫ng ta. Tham gia ngay h√¥m nay ƒë·ªÉ c√≥ m·ªôt tr·∫£i nghi·ªám gi√°o d·ª•c th√∫ v·ªã v√† b·ªï √≠ch!\n\n"\
            "üåç Nh·∫•p v√†o li√™n k·∫øt ƒë·ªÉ tham gia v√†o danh s√°ch c√°c k√™nh L·ªãch s·ª≠: [@history_channels]"\

        bot.send_message(
            CHANNEL_VI,
            tin_nhan,
            parse_mode='HTML',
        )
    except Exception as e:
        logger.error('L·ªói khi g·ª≠i c√°c s·ª± ki·ªán l·ªãch s·ª≠ ƒë·∫øn k√™nh:', str(e))


def get_curiosity_VI(CHANNEL_VI):
    try:
        today = datetime.now()
        day = today.day
        month = today.month
        with open(
            './channel-historys/data/curiosity/curiosity-vi.json', 'r', encoding='utf-8'
        ) as file:
            json_events = json.load(file)
            curiosity = json_events.get(f'{month}-{day}', {}).get(
                'curiosity', []
            )
            if curiosity:
                info = curiosity[0].get('text', '')

                # For 2025 (uncomment this line and comment the line above)
                # info = curiosidade[1].get("texto1", "")
                message = f'<b>Nh·ªØng ƒëi·ªÅu t√≤ m√≤ v·ªÅ l·ªãch s·ª≠ üìú üìú</b>\n\n{info}\n\n<blockquote>üí¨ B·∫°n c√≥ bi·∫øt kh√¥ng? Theo @hist_vi.</blockquote>'
                bot.send_message(CHANNEL_VI, message)
            else:

                logger.info('No hay informaci√≥n para el d√≠a de hoy.')

    except Exception as e:

        logger.error('Error al obtener informaci√≥n:', str(e))


def hist_channel_curiosity_VI():
    try:
        get_curiosity_VI(CHANNEL_VI)

        logger.success(f'Curiosidad enviada al canal {CHANNEL_VI}')

    except Exception as e:

        logger.error('Error al enviar la curiosidad al canal:', str(e))

with open(
    './data/presidents/presidents-vi.json', 'r', encoding='utf-8'
) as file:
    presidents = json.load(file)


def send_president_photo_VI():
    try:
        if db.presidents_vi.count_documents({}) == 0:
            president = presidents.get('1')
            new_id = 1
            new_date = datetime.now(
                pytz.timezone('America/Sao_Paulo')
            ).strftime('%Y-%m-%d')
            add_presidents_vi_db(new_id, new_date)
            send_info_through_CHANNEL_VI(president)
        else:
            last_president = (
                db.presidents_vi.find().sort([('_id', -1)]).limit(1)[0]
            )
            last_id = last_president['id']
            sending_date = datetime.strptime(
                last_president['date'], '%Y-%m-%d'
            )

            today = datetime.now(pytz.timezone('America/Sao_Paulo'))
            today_str = today.strftime('%Y-%m-%d')

            if last_president['date'] != today_str:

                logger.info(
                    'Atualizando informa√ß√µes do √∫ltimo presidente para a data atual.'
                )

                next_id = last_id + 1
                next_president = presidents.get(str(next_id))
                if next_president:
                    db.presidents_vi.update_one(
                        {'date': last_president['date']},
                        {'$set': {'date': today_str}, '$inc': {'id': 1}},
                    )

                    send_info_through_CHANNEL_VI(next_president)
                else:

                    logger.error('No more presidents to send.')

            else:

                logger.info(
                    "It's not time yet to send information about the next president."
                )

    except Exception as e:

        logger.error(
            f'An error occurred while sending president information: {str(e)}'
        )


def send_info_through_CHANNEL_VI(president_info):
    try:
        title = president_info.get('title', '')
        name = president_info.get('name', '')
        position = president_info.get('position', '')
        party = president_info.get('broken', '')
        term_year = president_info.get('year_of_office', '')
        vice_president = president_info.get('vice_president', '')
        photo = president_info.get('photo', '')
        where = president_info.get('local', '')

        caption = (
            f'<b>{title}</b>\n\n'
            f'<b>T√™n:</b> {name}\n'
            f'<b>Th√¥ng tin:</b> {position}¬∞ {title}\n'
            f'<b>ƒê·∫£ng:</b> {party}\n'
            f'<b>NƒÉm nhi·ªám k·ª≥:</b> {term_year}\n'
            f'<b>Ph√≥ T·ªïng th·ªëng:</b> {vice_president}\n'
            f'<b>ƒê·ªãa ƒëi·ªÉm:</b> {where}\n\n'
            f'<blockquote>üí¨ B·∫°n c√≥ bi·∫øt kh√¥ng? Theo d√µi @hist_vi.</blockquote>'
        )

        logger.success('¬°Env√≠o del presidente completado con √©xito!')

        bot.send_photo(
            CHANNEL_VI, photo=photo, caption=caption, parse_mode='HTML'
        )
    except Exception as e:

        logger.error(f'Error al enviar la foto del presidente: {str(e)}')